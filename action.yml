name: Run omnibenchmark
author: Izaskun Mallona izaskun.mallona@gmail.com
description: Runs an omnibenchmark YAML using github actions

inputs:
  yaml:
    description: path to the omnibenchmark yaml
    required: true
  backend:
    description: software backend to use (only conda or apptainer)
    required: true
    default: conda
    type: string
    options:
      - conda
      - apptainer
  cores:
    description: number of concurrent jobs and perhaps cores (`ob --cores`)
    required: false
    default: 1
    type: number
  omnibenchmark_branch:
    description: omnibenchmark branch to test
    default: main
    type: string
  conda_handler:
    description: backend to handle conda deps
    default: micromamba
    type: string
    options:
      - micromamba
      - miniforge
runs:
  using: "composite"
  steps:
    - name: Set variables for global use
      id: vars
      shell: bash
      run: |
        echo "YAML=${{ inputs.yaml }}" >> "${GITHUB_OUTPUT}"
        echo "BACKEND=${{ inputs.backend }}" >> "${GITHUB_OUTPUT}"
        echo "CORES=${{ inputs.cores }}" >> "${GITHUB_OUTPUT}"
        echo "OB_BRANCH=${{ inputs.omnibenchmark_branch }}" >> "${GITHUB_OUTPUT}"
      
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Create omnibenchmark conda env file
      id: create_env
      shell: bash
      run: |          
          touch omnibenchmark_conda.yaml
          echo "name: omnibenchmark_deps"          >> omnibenchmark_conda.yaml
          echo "channels:"                         >> omnibenchmark_conda.yaml
          echo "  - conda-forge"                   >> omnibenchmark_conda.yaml
          echo "  - bioconda"                      >> omnibenchmark_conda.yaml
          echo "  - nodefaults"                    >> omnibenchmark_conda.yaml
          echo "dependencies:"                     >> omnibenchmark_conda.yaml
          echo "  - conda-forge::python == 3.12"   >> omnibenchmark_conda.yaml
          echo "  - conda-forge::pip >= 25.0.0"    >> omnibenchmark_conda.yaml
          echo "  - conda-forge::mamba >= 1.5.10"  >> omnibenchmark_conda.yaml
          echo "  - conda-forge::conda >= 25.5.1"  >> omnibenchmark_conda.yaml
          mkdir -p env
          mv omnibenchmark_conda.yaml env
          cat env/omnibenchmark_conda.yaml
            
    - name: Install apptainer
      uses: eWaterCycle/setup-apptainer@v2
      if: inputs.backend == 'apptainer'
      with:
        apptainer-version: 1.4.0

    - name: Install ob requirements (with) micromamba
      uses: mamba-org/setup-micromamba@v2
      if: (inputs.backend == 'apptainer' || inputs.backend == 'conda') && inputs.conda_handler == 'micromamba'
      with:
        environment-file: env/omnibenchmark_conda.yaml
        cache-environment: true
        create-args: >-
          python=3.12
        post-cleanup: environment

    - name: Install ob requirements (with) miniforge
      uses: conda-incubator/setup-miniconda@v3
      if: (inputs.backend == 'apptainer' || inputs.backend == 'conda') && inputs.conda_handler == 'miniforge'
      with:
        miniforge-variant: Miniforge3
        use-mamba: true
        environment-file: env/omnibenchmark_conda.yaml
        python-version: "3.12"
        auto-update-conda: true
        channels: conda-forge
      
    - name: Install omnibenchmark
      env:
        OB_BRANCH: ${{ steps.vars.outputs.OB_BRANCH }} 
      shell: bash -l {0}
      run: |
        pip install git+https://github.com/omnibenchmark/omnibenchmark.git@"$OB_BRANCH"

    - name: Run benchmark
      env:
        YAML: ${{ steps.vars.outputs.YAML }}
        BACKEND: ${{ steps.vars.outputs.BACKEND }}
        CORES: ${{ steps.vars.outputs.CORES }}        
      shell: bash -l {0}
      run: |
        ob run benchmark -b "$YAML" --local --cores "$CORES" --yes
         
    - name: Upload benchmark files (artifact)
      uses: actions/upload-artifact@v4
      with:
        name: Benchmarking results
        path: ${{ github.workspace }}/out
